nohup: ignoring input
Loading required package: Rcpp
Attaching SeuratObject
Warning message:
In CheckDuplicateCellNames(object.list = objects) :
  Some cell names are duplicated across objects provided. Renaming to enforce unique cell names.
Centering and scaling data matrix
  |                                                                              |                                                                      |   0%  |                                                                              |=====                                                                 |   7%  |                                                                              |==========                                                            |  14%  |                                                                              |===============                                                       |  21%  |                                                                              |====================                                                  |  29%  |                                                                              |=========================                                             |  36%  |                                                                              |==============================                                        |  43%  |                                                                              |===================================                                   |  50%  |                                                                              |========================================                              |  57%  |                                                                              |=============================================                         |  64%  |                                                                              |==================================================                    |  71%  |                                                                              |=======================================================               |  79%  |                                                                              |============================================================          |  86%  |                                                                              |=================================================================     |  93%  |                                                                              |======================================================================| 100%
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
Warning: Invalid name supplied, making object name syntactically valid. New object name is Seurat..ProjectDim.RNA.harmony; see ?make.names for more details on syntax validity
17:38:54 UMAP embedding parameters a = 0.9922 b = 1.112
17:38:54 Read 59706 rows and found 20 numeric columns
17:38:54 Using Annoy for neighbor search, n_neighbors = 30
17:38:54 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
17:39:49 Writing NN index file to temp file /tmp/RtmpY8iyJw/file83e8458f9ac9
17:39:50 Searching Annoy index using 1 thread, search_k = 3000
17:42:12 Annoy recall = 100%
17:42:16 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30
17:42:39 Initializing from normalized Laplacian + noise (using irlba)
17:43:15 Commencing optimization for 200 epochs, with 2685282 positive edges
Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
17:46:01 Optimization finished
Computing nearest neighbor graph
Computing SNN
Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck

Number of nodes: 59706
Number of edges: 2088685

Running Louvain algorithm...
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Maximum modularity in 10 random starts: 0.9243
Number of communities: 32
Elapsed time: 59 seconds
